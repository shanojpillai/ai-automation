{
  "name": "RAG AI Agent",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rag-query",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "url": "=http://qdrant:6333/collections/documents/points/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "vector",
              "value": "={{ $('Embedding API').item.json.data[0].embedding }}"
            },
            {
              "name": "limit",
              "value": 5
            }
          ]
        },
        "options": {}
      },
      "name": "Qdrant Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "url": "=http://ollama:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "llama3"
            },
            {
              "name": "prompt",
              "value": "={{ $json.query }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Embedding API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Extract relevant context from search results\nconst results = $input.item.json.result;\nlet context = '';\n\nif (results && results.length > 0) {\n  // Extract text from top results\n  for (let i = 0; i < Math.min(results.length, 3); i++) {\n    if (results[i].payload && results[i].payload.text) {\n      context += results[i].payload.text + '\\n\\n';\n    }\n  }\n}\n\n// Prepare prompt with context\nconst query = $input.first().json.query;\nconst prompt = `You are an AI assistant that answers questions based on the provided context.\n\nContext:\n${context}\n\nQuestion: ${query}\n\nAnswer the question based on the context provided. If the context doesn't contain relevant information, say so.`;\n\nreturn {\n  json: {\n    prompt: prompt,\n    query: query\n  }\n};"
      },
      "name": "Prepare RAG Prompt",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "url": "=http://ollama:11434/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "llama3"
            },
            {
              "name": "prompt",
              "value": "={{ $json.prompt }}"
            },
            {
              "name": "stream",
              "value": false
            }
          ]
        },
        "options": {}
      },
      "name": "Ollama API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {response: $json.response, query: $('Prepare RAG Prompt').item.json.query} }}",
        "options": {}
      },
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1340,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Embedding API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Search": {
      "main": [
        [
          {
            "node": "Prepare RAG Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embedding API": {
      "main": [
        [
          {
            "node": "Qdrant Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare RAG Prompt": {
      "main": [
        [
          {
            "node": "Ollama API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama API": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "2",
  "id": "2",
  "meta": {
    "instanceId": "2"
  },
  "tags": []
}
